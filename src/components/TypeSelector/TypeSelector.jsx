import React, {useState} from 'react';
import styles from './TypeSelector.module.css';
import SearchBar from "../SearchBar/SearchBar";
import SearchPage from "../../pages/SearchPage/SearchPage";

const objectTypes = [
  {
    id: 'camps',
    name: '–î–µ—Ç—Å–∫–∏–µ –ª–∞–≥–µ—Ä—è',
    icon: 'üèïÔ∏è',
    description: '–ê–∫—Ç–∏–≤–Ω—ã–π –æ—Ç–¥—ã—Ö –∏ —Ä–∞–∑–≤–∏—Ç–∏–µ –¥–ª—è –¥–µ—Ç–µ–π',
    color: '#48bb78'
  },
  {
    id: 'resorts',
    name: '–ë–∞–∑—ã –æ—Ç–¥—ã—Ö–∞',
    icon: 'üèñÔ∏è',
    description: '–ö–æ–º—Ñ–æ—Ä—Ç–Ω—ã–π –æ—Ç–¥—ã—Ö –Ω–∞ –ø—Ä–∏—Ä–æ–¥–µ',
    color: '#4299e1'
  },
  {
    id: 'sanatoriums',
    name: '–°–∞–Ω–∞—Ç–æ—Ä–∏–∏',
    icon: 'üè•',
    description: '–û–∑–¥–æ—Ä–æ–≤–ª–µ–Ω–∏–µ –∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ',
    color: '#9f7aea'
  },
  {
    id: 'sports',
    name: '–°–ø–æ—Ä—Ç–∫–æ–º–ø–ª–µ–∫—Å—ã',
    icon: 'üèüÔ∏è', // –∏–ª–∏ '‚öΩ', 'üèÄ', 'üèä‚Äç‚ôÇÔ∏è'
    description: '–ê–∫—Ç–∏–≤–Ω—ã–π –æ—Ç–¥—ã—Ö –∏ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏',
    color: '#f56565' // —ç–Ω–µ—Ä–≥–∏—á–Ω—ã–π –∫—Ä–∞—Å–Ω—ã–π
  },
  {
    id: 'culture',
    name: '–ö—É–ª—å—Ç—É—Ä–∞',
    icon: 'üé≠', // –∏–ª–∏ 'üèõÔ∏è', 'üé®', 'üìö'
    description: '–ò—Å–∫—É—Å—Å—Ç–≤–æ, –≤—ã—Å—Ç–∞–≤–∫–∏ –∏ –∫—É–ª—å—Ç—É—Ä–Ω—ã–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è',
    color: '#9f7aea' // –±–ª–∞–≥–æ—Ä–æ–¥–Ω—ã–π —Ñ–∏–æ–ª–µ—Ç–æ–≤—ã–π
  }
];

const TypeSelector = ({ onSelect, onSearch }) => {
  const [currentView, setCurrentView] = useState('categories');
  const [searchQuery, setSearchQuery] = useState('');

  const handleSearchFocus = () => {
    setCurrentView('search');
  };

  const handleSearch = (query) => {
    setSearchQuery(query);
    if (onSearch) onSearch(query);
  };

  const handleBackToCategories = () => {
    setCurrentView('categories');
    setSearchQuery('');
  };

  if (currentView === 'search') {
    return (
      <SearchPage
        searchQuery={searchQuery}
        onSearch={handleSearch}
        onBack={handleBackToCategories}
        searchResults={[]}
      />
    );
  }

  return (
    <div className={styles.selector}>
      <div className={styles.hero}>
        <h1 className={styles.heroTitle}>–ó–∞–±–æ—Ç–∞ –æ –≤–∞—à–µ–º –æ—Ç–¥—ã—Ö–µ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –∑–¥–µ—Å—å</h1>
        <p className={styles.heroSubtitle}>–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –æ–±—ä–µ–∫—Ç–∞ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤</p>
      </div>

      <SearchBar
        onSearch={handleSearch}
        onFocus={handleSearchFocus}
        compact={false}
      />

      <div className={styles.typesGrid}>
        {objectTypes.map((type) => (
          <div
            key={type.id}
            className={styles.typeCard}
            onClick={() => onSelect(type.id)}
            style={{ '--card-color': type.color }}
          >
            <div className={styles.cardContent}>
              <div className={styles.iconWrapper}>
                <span className={styles.icon}>{type.icon}</span>
              </div>
              <h3 className={styles.cardTitle}>{type.name}</h3>
              <p className={styles.cardDescription}>{type.description}</p>
              <div className={styles.cardHover}>
                <span className={styles.hoverText}>–í—ã–±—Ä–∞—Ç—å</span>
                <span className={styles.arrow}>‚Üí</span>
              </div>
            </div>
          </div>
        ))}
      </div>
    </div>
  );
};

export default TypeSelector;